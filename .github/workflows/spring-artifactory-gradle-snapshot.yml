name: CI Artifactory SNAPSHOT Build for Gradle

on:
  workflow_call:
    inputs:
      gradleTasks:
        description: 'Additional Gradle tasks. The `build` and `artifactoryPublish` are included.'
        required: false
        type: string
      targetRepository:
        description: 'The Artifactory Repository to upload snapshot artifacts to'
        required: false
        type: string
        default: libs-snapshot-local
      artifactoryProjectKey:
        description: 'The Artifactory project key'
        required: false
        type: string

    secrets:
      GRADLE_ENTERPRISE_CACHE_USER:
        required: false
      GRADLE_ENTERPRISE_CACHE_PASSWORD:
        required: false
      GRADLE_ENTERPRISE_SECRET_ACCESS_KEY:
        required: false
      ARTIFACTORY_USERNAME:
        required: false
      ARTIFACTORY_PASSWORD:
        required: false
      JF_ARTIFACTORY_SPRING:
        required: true

env:
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
  JFROG_CLI_BUILD_PROJECT: ${{ inputs.artifactoryProjectKey }}
  WORKFLOWS_REF: main

jobs:
  build-snapshot-with-gradle:
    runs-on: ubuntu-latest
    name: CI Build SNAPSHOT for ${{ github.ref_name }}
    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Set up Gradle
        uses: spring-io/spring-gradle-build-action@v2

      - name: Checkout Common Repo
        uses: actions/checkout@v4
        with:
          repository: spring-io/spring-github-workflows
          path: build
          show-progress: false
          ref: ${{ env.WORKFLOWS_REF }}

      - uses: jfrog/setup-jfrog-cli@v3

      - name: Configure JFrog Cli
        run: |
          jf gradlec \
            --uses-plugin=true \
            --repo-deploy=${{ inputs.targetRepository }}
          
          echo JFROG_CLI_BUILD_NAME=${{ github.event.repository.name }}-${{ github.ref_name }} >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

      - name: Build and Publish
        run: |
          gradle clean build ${{ inputs.gradleTasks }} artifactoryPublish
          jf rt build-publish

